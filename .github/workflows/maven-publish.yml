name: Package Binaries

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: central
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

#    - name: Install GPG Secret Key
#      run: |
#        cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import
#        gpg --list-secret-keys --keyid-format LONG

    - name: Set version
      run: mvn -B versions:set -DnewVersion=${{ github.event.release.tag_name }}

    - name: Build with Maven
      run: mvn -B -Drevision=${{ github.event.release.tag_name }} package

    - name: 'Upload Executable JAR to Artifact Cache'
      uses: actions/upload-artifact@v4
      with:
        name: taverna-${{ github.event.release.tag_name }}-executable.jar
        path: target/taverna-${{ github.event.release.tag_name }}.jar
        retention-days: 1

  build_native:
    # build on all target os
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            native-asset-suffix: linux-amd64
            target-suffix: ""
          - os: windows-latest
            native-asset-suffix: windows-amd64.exe
            target-suffix: .exe
          - os: macos-latest
            native-asset-suffix: macos
            target-suffix: ""

    permissions:
      contents: read
      packages: write

    steps:
      # install GraalVM (mandrel) for native build
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'mandrel'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # windows: install msbuild tools for native compile
      - name: Add msbuild to PATH
        if: contains(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v1.0.2

      # windows: ensure that dev tools are added to path
      - name: Add toolkit to path
        if: contains(matrix.os, 'windows')
        uses: ilammy/msvc-dev-cmd@v1

      # ubuntu: install packages needed for graalvm native compile
      - name: Install additional packages
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get install -y zlib1g-dev

      - uses: actions/checkout@v4

      - name: Set version
        run: mvn -B versions:set -DnewVersion="${{ github.event.release.tag_name }}"

      - name: Build with Maven
        run: |
          mvn -B --update-snapshots -DskipTests -Drevision="${{ github.event.release.tag_name }}" -Pnative package
          mv target/taverna${{ matrix.target-suffix }} target/taverna-${{ github.event.release.tag_name }}-${{ matrix.native-asset-suffix }}

      - name: 'Upload Binary Executable'
        uses: actions/upload-artifact@v4
        with:
          name: taverna-${{ github.event.release.tag_name }}-${{ matrix.native-asset-suffix }}
          path: target/taverna-${{ github.event.release.tag_name }}-${{ matrix.native-asset-suffix }}
          retention-days: 1

  update_release:
    name: "Update Github Release"
    runs-on: ubuntu-latest
    needs: [build, build_native]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2

      - name: 'Download Artifacts from Cache'
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: "Upload Artifacts to Release"
        uses: ncipollo/release-action@v1
        with:
          artifacts: artifacts/taverna*